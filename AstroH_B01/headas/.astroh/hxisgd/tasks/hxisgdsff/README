This Build 1.0 release should compile on Linux (SL 5 and 6) and MACOS.

The HXI ans SGD telemetry FITS files have similar formats and can
be processed in similar fashions. Consequently a single FTool called
"hxisgdff" has been developed to accomodate both instruments telemetry
data pre-pipeline processing, in one app.

A Perl script "ahsysinfo" should be included in the Build 1.0 release
that provides some version info. An exampe of its printout is appended below.

There are three ready-made PFILE paramater files here for each instrument, 
meant to support unit tests of the hxisgdsff app.

Process HXI data via HXI FITS temeplate:
hxisf_yy.par -- precheck and clobber set to yes.
hxisf_nn.par -- precheck and clobber set to no.
hxisf_ny.par -- precheck set to no, clobber to yes.

To test with one, please set a symlink (depending on one's PFILE
environmet setting, it may be necessary to set and reset the
symlink indicated below with one's ~/pfiles directory):

ln -s hxisf_yy.par hxisgdsff.par

and optionally remove or empty/clear any pre-existing subdirectories:
./input ./output ./expected_output.

Run the (local) hxisgdsff binary with both clobber and precheck true,
to produce the default input test FITS file, template, and expected
output file (assuming the binary is located in one's current working
directory):

./hxisgdsff

This should initialize and populate ./input ./expected_output (with internally
generated test/fake telemetry FITS files) and an empty ./output directory.

Then reset the synlink:

unlink hxisgdsff.par
ln -s hxisf_nn.par hxisgdsff.par

Run the hxisgdsff ftool with clobber and precheck set to no (assuming
the binary is located in one's current working directory):

./hxisgdsff

This should process the test input file and create an output file in ./output 
that can be verified against the file in ./expected_output via "ftverify".

Iterative tests can be performed by the "ny" parfile:

ln -s hxisf_ny.par hxisgdsff.par

Similarly, process SGD telemetry via hxisgdsff with these parfile:
sgdsf_nn.par
sgdsf_ny.par
sgdsf_yy.par

Please note that name of the FITS template file and the FITS HDU keyword 
"INSTRUME" are checked to validate which instrument is meant to be processed
(HXI vs. SGD).

There are also 6 pre-generated test input FITS files currently stored in the
CVS repository. The hxitest and sgdtest subdirectories under the hxisgd/tasks/hxisgdsff 
source should each provide 3 test files -- containing one to three row b-table HDUs.
These also have been tar'd into a single compressed file in:
"headas/astroh/hxisgd/b01tests.tgz" 

Finally, feel free to check the version info for the tool runtime and its library 
dependencies via the Perl script "ahsysinfo". Below is the result from a Scientific
Linux environment of "ahsysinfo hxisgdsff" (ahsysinfo may also be used to inspect
a runtime library as well as an application binary).

 ------------------------ Astro-H Software Host: gs66-xen.gsfc.nasa.gov -------------------- 
Linux xen 2.6.32-220.23.1.el6.x86_64 #1 SMP Mon Jun 18 09:58:09 CDT 2012 x86_64 x86_64 x86_64 GNU/Linux

This is perl 5, version 14, subversion 2 (v5.14.2) built for x86_64-linux-thread-multi
 
 
	linux-vdso.so.1 =>  (0x00007fff475ff000)
	libahhxi.so => /Home/xtelab/dhon/local/headev/x86_64-unknown-linux-gnu-libc2.12/lib/libahhxi.so (0x00002aee3edd5000)
	libahsgd.so => /Home/xtelab/dhon/local/headev/x86_64-unknown-linux-gnu-libc2.12/lib/libahsgd.so (0x00002aee3f011000)
	libahtlm.so => /Home/xtelab/dhon/local/headev/x86_64-unknown-linux-gnu-libc2.12/lib/libahtlm.so (0x00002aee3f251000)
	libahfits.so => /Home/xtelab/dhon/local/headev/x86_64-unknown-linux-gnu-libc2.12/lib/libahfits.so (0x00002aee3f4a2000)
	libahmath.so => /Home/xtelab/dhon/local/headev/x86_64-unknown-linux-gnu-libc2.12/lib/libahmath.so (0x00002aee3f6c7000)
	libahgen.so => /Home/xtelab/dhon/local/headev/x86_64-unknown-linux-gnu-libc2.12/lib/libahgen.so (0x00002aee3f8cc000)
	libahlog.so => /Home/xtelab/dhon/local/headev/x86_64-unknown-linux-gnu-libc2.12/lib/libahlog.so (0x00002aee3facf000)
	libst_stream.so => /Home/xtelab/dhon/local/headev/x86_64-unknown-linux-gnu-libc2.12/lib/libst_stream.so (0x00002aee3fcd9000)
	libhdinit_2.6.so => /Home/xtelab/dhon/local/headev/x86_64-unknown-linux-gnu-libc2.12/lib/libhdinit_2.6.so (0x00002aee3feeb000)
	libhdutils_2.6.so => /Home/xtelab/dhon/local/headev/x86_64-unknown-linux-gnu-libc2.12/lib/libhdutils_2.6.so (0x00002aee400ee000)
	libape_2.8.so => /Home/xtelab/dhon/local/headev/x86_64-unknown-linux-gnu-libc2.12/lib/libape_2.8.so (0x00002aee40309000)
	libcfitsio_3.29.so => /Home/xtelab/dhon/local/headev/x86_64-unknown-linux-gnu-libc2.12/lib/libcfitsio_3.29.so (0x00002aee4054f000)
	libreadline.so.6 => /lib64/libreadline.so.6 (0x00000037f3400000)
	libhdio_2.6.so => /Home/xtelab/dhon/local/headev/x86_64-unknown-linux-gnu-libc2.12/lib/libhdio_2.6.so (0x00002aee40942000)
	libpthread.so.0 => /lib64/libpthread.so.0 (0x00000030b8400000)
	libtinfo.so.5 => /lib64/libtinfo.so.5 (0x00000037f2a00000)
	libdl.so.2 => /lib64/libdl.so.2 (0x00000030b8000000)
	libnsl.so.1 => /lib64/libnsl.so.1 (0x00000030c8600000)
	libstdc++.so.6 => /usr/lib64/libstdc++.so.6 (0x00000030be800000)
	libm.so.6 => /lib64/libm.so.6 (0x00000030b7c00000)
	libgcc_s.so.1 => /lib64/libgcc_s.so.1 (0x00000030be400000)
	libc.so.6 => /lib64/libc.so.6 (0x00000030b7800000)
	/lib64/ld-linux-x86-64.so.2 (0x00000030b7400000)
 
$Id: README,v 1.3 2012/07/23 16:25:48 dhon Exp $
$Id: README,v 1.3 2012/07/23 16:25:48 dhon Exp $
$Id: README,v 1.3 2012/07/23 16:25:48 dhon Exp $
$Id: README,v 1.3 2012/07/23 16:25:48 dhon Exp $
$Id: README,v 1.3 2012/07/23 16:25:48 dhon Exp $
$Id: README,v 1.3 2012/07/23 16:25:48 dhon Exp $
$Id: README,v 1.3 2012/07/23 16:25:48 dhon Exp $
$Id: README,v 1.3 2012/07/23 16:25:48 dhon Exp $
$Name: AstroH_B01 $ $Id: README,v 1.3 2012/07/23 16:25:48 dhon Exp $
$Name: AstroH_B01 $ $Id: README,v 1.3 2012/07/23 16:25:48 dhon Exp $
$Name: AstroH_B01 $ $Id: README,v 1.3 2012/07/23 16:25:48 dhon Exp $
$Name: AstroH_B01 $ $Id: README,v 1.3 2012/07/23 16:25:48 dhon Exp $
$Name: AstroH_B01 $ $Id: README,v 1.3 2012/07/23 16:25:48 dhon Exp $
$Name: AstroH_B01 $ $Id: README,v 1.3 2012/07/23 16:25:48 dhon Exp $
$Name: AstroH_B01 $ $Id: README,v 1.3 2012/07/23 16:25:48 dhon Exp $
$Name: AstroH_B01 $ $Id: README,v 1.3 2012/07/23 16:25:48 dhon Exp $
 
