#!/usr/bin/env perl
#
# use ldd or otool -L for dynamic lib info
# and strings | grep '$Id' | sort -u for src & header version
#
use strict;
#use warnings;
#use diagnostics;

use Config;

sub fetchLibName {
  my $app = shift;
  my $os = shift;
  my $libtool = 'ldd';
  my $libs = '';

  $os = lc($os);
# http://perl.active-venture.com/pod/perlport-platforms.html
  if( $os =~ /bsd/i ) { $libtool = 'otool -L'; } 
  if( $os =~ /darwin/i ) { $libtool = 'otool -L'; } 

  if( $libtool ne 'ldd' ) {
    $libs = `$libtool $app`;
    if( length($libs) <= 0 ) {
      print "sorry, no MAC otool info -- dynamic libs unknown...\n";
    }
    else {
      print "$libs \n";
    }
    return $libs;
  }

  $libs = `ldd $app`;
  if( length($libs) <= 0 ) {
    print "sorry, no ldd info -- dynamic libs unknown...\n";
  }
  else {
    print "$libs \n";
  }
  return $libs;
}

sub fetchRevision {
  my $app = shift;
  my $os = shift;
  my $rev = `strings $app | grep '\$Id' | sort -u`;
  print "$rev \n";
  return $rev;
}

#
############ main ###########
#

my $argcnt = @ARGV;
my $appname = '';
if( $argcnt > 0 ) { $appname = $ARGV[0]; }
#print $appname, " system info ... \n";

my $host = `hostname -f`; chomp $host;
print "\n ------------------------ Astro-H Software Host: $host -------------------- \n";

my $osa = `uname -a`;
print "$osa";

my $prl = `perl -v|head -2`;
#$prl = substr($prl, index($prl, '\n'));
print "$prl \n";

my $cc = `gcc -v`;
#$cc = substr($cc, index($cc, '\n'));
print "$cc \n";

if( length($appname) <= 0 ) {
  print "please provide the full path-name of the application binary ...\n";
  exit;
}

open my $fh, '<:raw', $appname or die "Cannot open file '$appname' for binary read";

# my $os = $^O;
# http://www.xav.com/perl/lib/Config.html
my $os = $Config{'osname'};
fetchLibName($appname, $os);
fetchRevision($appname, $os);

